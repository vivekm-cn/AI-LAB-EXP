import itertools

def solve_cryptarithmetic():
    letters = 'SENDMORY'
    digits = range(10)
    
    # Generate all possible assignments of digits to letters
    for p in itertools.permutations(digits, len(letters)):
        sol = dict(zip(letters, p))

        # Constraint: First letter of a number cannot be zero
        if sol['S'] == 0 or sol['M'] == 0:
            continue

        send = sol['S'] * 1000 + sol['E'] * 100 + sol['N'] * 10 + sol['D']
        more = sol['M'] * 1000 + sol['O'] * 100 + sol['R'] * 10 + sol['E']
        money = sol['M'] * 10000 + sol['O'] * 1000 + sol['N'] * 100 + sol['E'] * 10 + sol['Y']

        if send + more == money:
            print("Crypt-Arithmetic Solution Found:")
            print(f"  {send}")
            print(f"+ {more}")
            print("-------")
            print(f" {money}\n")
            print("Assignments:", sol)
            return
            
    print("No solution found.")

# --- Example Usage ---
solve_cryptarithmetic()
